plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'jacoco'
    id "org.sonarqube" version "4.4.1.3373"
    id 'checkstyle'
}

group = 'com.nikolabojanic'

java {
    sourceCompatibility = '17'
}

checkstyle {
    configFile = rootProject.file("${project.rootDir}/main-service/config/checkstyle/checkstyle.xml")
}

sonar {
    properties {
        property "sonar.projectKey", "main-service"
        property "sonar.projectName", "main-service"
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.token", "sqp_7b8c35ccdc8ef9d2305cf49a3052915d3b628edc"
        property "sonar.jacoco.reportPaths", "main-service/build/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.login", "admin"
        property "sonar.password", "sonar"
    }
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.0"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-activemq'
    implementation 'io.github.resilience4j:resilience4j-spring-boot2:2.2.0'
    implementation 'org.liquibase:liquibase-core:4.25.1'
    implementation 'org.liquibase:liquibase-gradle-plugin:2.2.1'
    implementation 'org.postgresql:postgresql:42.7.1'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.2.0'
    implementation 'ch.qos.logback:logback-classic:1.4.14'
    implementation 'io.micrometer:micrometer-registry-prometheus:1.12.1'
    implementation 'com.google.guava:guava:33.0.0-jre'
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.assertj:assertj-core:3.24.2'
    testImplementation('io.rest-assured:rest-assured:5.4.0') {
        exclude group: 'org.apache.groovy', module: 'groovy'
        exclude group: 'org.apache.groovy', module: 'groovy-xml'
    }
    testImplementation 'org.testcontainers:testcontainers:1.19.6'
    testImplementation 'org.testcontainers:junit-jupiter:1.19.6'
    testImplementation 'org.testcontainers:postgresql:1.19.6'
}


test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
    exclude '**/*IT.class'
}

task integrationTest(type: Test) {
    group 'verification'
    useJUnitPlatform()
    include '**/*IT.class'
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
    }
}
